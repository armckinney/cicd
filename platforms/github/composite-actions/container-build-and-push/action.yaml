name: container-build-and-push
description: "Build and push container"

inputs:
  dockerfile:
    description: "Filepath of dockerfile to build and push"
    required: false
    default: "./.devcontainer/Dockerfile"
  dockerhub_id:
    description: "DockerHub username"
    required: true
  dockerhub_access_token:
    description: "DockerHub access token"
    required: true
outputs:
  container_image:
    description: "Container image name"
    value: ${{ inputs.dockerhub_id }}/${{ github.event.repository.name }}:${{ github.head_ref }}

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.dockerhub_id }}
        password: ${{ inputs.dockerhub_access_token }}

    - name: Access Docker layer cache
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Build from cache and push
      id: docker_build
      uses: docker/build-push-action@v6
      with:
        context: ./
        file: ${{ inputs.dockerfile }}
        builder: ${{ steps.buildx.outputs.name }}
        tags: ${{ inputs.dockerhub_id }}/${{ github.event.repository.name }}:${{ github.head_ref }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        push: true

    - name: Clean cache
      shell: bash
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
