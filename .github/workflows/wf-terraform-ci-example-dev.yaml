name: wf-terraform-ci-example-dev

env:
  DOCKERHUB_ID: 'armck'
  TF_CONFIGURATION_PATH: 'terraform/configurations/example'
  TF_VARFILE: 'env/dev.tfvars'
  TF_BACKEND_CONFIG: 'env/dev.tfbackend'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash

jobs:
  setup-env:
    runs-on: ubuntu-24.04
    outputs:
        dockerhub_id: ${{ steps.env.outputs.dockerhub_id }}
        tf_configuration_path: ${{ steps.env.outputs.tf_configuration_path }}
        tf_varfile: ${{ steps.env.outputs.tf_varfile }}
        tf_backend_config: ${{ steps.env.outputs.tf_backend_config }}
    steps:
      - name: Setup environment variables
        id: env
        run: |
          echo "dockerhub_id=$DOCKERHUB_ID" >> "$GITHUB_OUTPUT"
          echo "tf_configuration_path=$TF_CONFIGURATION_PATH" >> "$GITHUB_OUTPUT"
          echo "tf_varfile=$TF_VARFILE" >> "$GITHUB_OUTPUT"
          echo "tf_backend_config=$TF_BACKEND_CONFIG" >> "$GITHUB_OUTPUT"

  terraform-deployment-ci:
    needs: setup-env
    uses: armckinney/cicd/.github/workflows/terraform-deployment-ci.yaml@1-scaffold-project
    strategy:
      matrix:
        tf_varfile: ['env/dev.tfvars', 'env/stage.tfvars', 'env/prod.tfvars']
        tf_backend_config: ['env/dev.tfbackend', 'env/stage.tfbackend', 'env/prod.tfbackend']
    with:
      dockerhub_id: ${{ needs.setup-env.outputs.dockerhub_id }}
      tf_configuration_path: ${{ needs.setup-env.outputs.tf_configuration_path }}
      tf_varfile: ${{ matrix.tf_varfile }}
      tf_backend_config: ${{ needs.setup-env.outputs.tf_backend_config }}
      review_environment: review
    secrets:
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  # container-build-and-push:
  #   uses: armckinney/cicd/.github/workflows/container-build-and-push.yaml@1-scaffold-project
  #   needs: setup-env
  #   with:
  #     dockerhub_id: ${{ needs.setup-env.outputs.dockerhub_id }}
  #   secrets:
  #     DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  # static-analysis:
  #   needs: [container-build-and-push, setup-env]
  #   uses: armckinney/cicd/.github/workflows/terraform-static-analysis.yaml@1-scaffold-project
  #   with:
  #     container_image: ${{ needs.container-build-and-push.outputs.container_image }}
  #     tf_configuration_path: ${{ needs.setup-env.outputs.tf_configuration_path }}
  #     tf_varfile: ${{ needs.setup-env.outputs.tf_varfile }}

  # terraform-plan:
  #   needs: [container-build-and-push, setup-env, static-analysis]
  #   uses: armckinney/cicd/.github/workflows/terraform-plan.yaml@1-scaffold-project
  #   with:
  #     container_image: ${{ needs.container-build-and-push.outputs.container_image }}
  #     tf_configuration_path: ${{ needs.setup-env.outputs.tf_configuration_path }}
  #     tf_varfile: ${{ needs.setup-env.outputs.tf_varfile }}
  #     tf_backend_config: ${{ needs.setup-env.outputs.tf_backend_config }}

  # terraform-apply:
  #   needs: [container-build-and-push, setup-env, terraform-plan]
  #   uses: armckinney/cicd/.github/workflows/terraform-apply.yaml@1-scaffold-project
  #   with:
  #     review_environment: review
  #     container_image: ${{ needs.container-build-and-push.outputs.container_image }}
  #     tf_configuration_path: ${{ needs.setup-env.outputs.tf_configuration_path }}
  #     tf_varfile: ${{ needs.setup-env.outputs.tf_varfile }}
  #     tf_backend_config: ${{ needs.setup-env.outputs.tf_backend_config }}
