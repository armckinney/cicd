name: terraform-deployment-ci

on:
  workflow_call:
    inputs:
      dockerhub_id:
        description: 'Dockerhub ID'
        type: string
        required: true
      configuration:
        description: 'Name of the configuration'
        type: string
        required: true
      environment:
        description: 'Configuration Environment, should be the same for both the backend and GitHub environment'
        type: string
        required: true
    secrets:
      DOCKER_HUB_ACCESS_TOKEN:
        description: 'Docker Hub Access Token'
        required: true

defaults:
  run:
    shell: bash

jobs:
  container-build-and-push:
    uses: armckinney/cicd/.github/workflows/container-build-and-push.yaml@1-scaffold-project
    with:
      dockerhub_id: ${{ inputs.dockerhub_id }}
    secrets:
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  static-analysis:
    needs: [container-build-and-push]
    uses: armckinney/cicd/.github/workflows/terraform-static-analysis.yaml@1-scaffold-project
    with:
      container_image: ${{ needs.container-build-and-push.outputs.container_image }}
      tf_configuration_path: terraform/configurations/${{ inputs.configuration }}
      tf_varfile: env/${{ inputs.environment }}.tfvars

  terraform-plan:
    needs: [container-build-and-push, static-analysis]
    uses: armckinney/cicd/.github/workflows/terraform-plan.yaml@1-scaffold-project
    with:
      container_image: ${{ needs.container-build-and-push.outputs.container_image }}
      tf_configuration_path: terraform/configurations/${{ inputs.configuration }}
      tf_varfile: env/${{ inputs.environment }}.tfvars
      tf_backend_config: env/${{ inputs.environment }}.tfbackend

  terraform-apply:
    needs: [container-build-and-push, terraform-plan]
    uses: armckinney/cicd/.github/workflows/terraform-apply.yaml@1-scaffold-project
    with:
      review_environment: ${{ inputs.environment }}
      container_image: ${{ needs.container-build-and-push.outputs.container_image }}
      tf_configuration_path: terraform/configurations/${{ inputs.configuration }}
      tf_varfile: env/${{ inputs.environment }}.tfvars
      tf_backend_config: env/${{ inputs.environment }}.tfbackend
