name: terraform-deployment-ci

on:
  workflow_call:
    inputs:
      dockerhub_id:
        description: 'Dockerhub ID'
        type: string
        required: true
      dockerhub_access_token:
        description: 'Dockerhub access token'
        type: string
        required: true
      tf_configuration_path:
        description: 'Filepath Terraform configuration to analyze'
        type: string
        required: true
      tf_varfile:
        description: 'Terraform environment varfile to analyze'
        type: string
        required: true
      tf_backend_config:
        description: "Terraform environment backend config"
        type: string
        required: true
      review_environment:
        description: 'Name of the Github environment for review approvals'
        type: string
        required: false
        default: 'review'

defaults:
  run:
    shell: bash

jobs:
  container-build-and-push:
    uses: armckinney/cicd/.github/workflows/container-build-and-push.yaml@1-scaffold-project
    with:
      dockerhub_id: ${{ inputs.dockerhub_id }}
    secrets:
      DOCKER_HUB_ACCESS_TOKEN: ${{ inputs.dockerhub_access_token }}

  static-analysis:
    needs: [container-build-and-push]
    uses: armckinney/cicd/.github/workflows/terraform-static-analysis.yaml@1-scaffold-project
    with:
      container_image: ${{ needs.container-build-and-push.outputs.container_image }}
      tf_configuration_path: ${{ inputs.tf_configuration_path }}
      tf_varfile: ${{ inputs.tf_varfile }}

  terraform-plan:
    needs: [container-build-and-push, static-analysis]
    uses: armckinney/cicd/.github/workflows/terraform-plan.yaml@1-scaffold-project
    with:
      container_image: ${{ needs.container-build-and-push.outputs.container_image }}
      tf_configuration_path: ${{ inputs.tf_configuration_path }}
      tf_varfile: ${{ inputs.tf_varfile }}
      tf_backend_config: ${{ inputs.tf_backend_config }}

  terraform-apply:
    needs: [container-build-and-push, terraform-plan]
    uses: armckinney/cicd/.github/workflows/terraform-apply.yaml@1-scaffold-project
    with:
      review_environment: ${{ inputs.review_environment }}
      container_image: ${{ needs.container-build-and-push.outputs.container_image }}
      tf_configuration_path: ${{ inputs.tf_configuration_path }}
      tf_varfile: ${{ inputs.tf_varfile }}
      tf_backend_config: ${{ inputs.tf_backend_config }}
